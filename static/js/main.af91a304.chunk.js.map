{"version":3,"sources":["components/Users/Users.module.css","components/Authorization/Authorization.module.css","components/common/FormsControl/Login.js","components/common/Utils/validators.js","components/Authorization/Authorization.jsx","api/api.js","redux/auth-reducer.js","components/Authorization/AuthorizationContainer.js","components/Users/Users.jsx","redux/users-reducer.js","components/Users/UsersContainer.js","App.js","AppContainer.js","serviceWorker.js","redux/redux-store.js","index.js","App.module.css","components/common/FormsControl/Login.module.css"],"names":["module","exports","Input","input","meta","props","hasError","error","touched","className","style","input_container","input_error","error_message","requiredField","value","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","login_form","login_header","Field","type","autoComplete","validate","name","placeholder","component","btn_enter","error_message_login","Authorization","container","formData","auth","username","password","instance","axios","create","withCredentials","baseURL","authAPI","console","log","post","then","res","data","catch","request","usersAPI","token","get","headers","initialState","setAuth","authReducer","state","action","AuthorizationContainer","connect","dispatch","a","response","stopSubmit","_error","statusText","Users","this","getUsers","users_header","React","Component","users","usersReducer","UsersContainer","App","background","background2","btn_exit","onClick","AppContainer","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.af91a304.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_header\":\"Users_users_header__1TdMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Authorization_container__3j9oq\",\"animate_container\":\"Authorization_animate_container__3F5pX\",\"enter\":\"Authorization_enter__17XAz\",\"login_form\":\"Authorization_login_form__1kaOd\",\"login_header\":\"Authorization_login_header__28aRz\",\"btn_enter\":\"Authorization_btn_enter__1aTcL\",\"error_message_login\":\"Authorization_error_message_login__3y0kD\"};","import React from \"react\";\nimport style from \"./Login.module.css\";\n\nexport const Input = ({input, meta, ...props}) => {\n    const hasError =meta.error && meta.touched;\n    return (\n        <div className={style.input_container}>\n            <div>\n                <input {...input} {...props} className={(hasError ? style.input_error : \"\") + \" \" + style.input} />\n            </div>\n            {hasError && <div className={(hasError ? style.error_message : \"\")}>{meta.error}</div>}\n        </div>\n    )\n}","export const requiredField = value => {\n    if(value) return undefined;\n    return \"Required field\";\n}","import React from 'react';\nimport style from './Authorization.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControl/Login\";\nimport {requiredField} from \"../common/Utils/validators\";\n\nconst LoginForm = (props) => {\n    return (\n        <form onSubmit ={props.handleSubmit} className={style.login_form}>\n            <span className={style.login_header}>\n                Login\n            </span>\n            <Field type=\"text\" autoComplete={\"off\"} validate={[requiredField]} name={\"username\"} placeholder=\"Username\" component={Input} />\n            <Field type=\"password\" autoComplete={\"off\"} validate={[requiredField]} name={\"password\"} placeholder=\"Password\" component={Input} />\n            <button className={style.btn_enter}>Enter</button>\n            {props.error && <div className={style.error_message_login}>\n                {props.error}\n            </div>}\n        </form>\n    );\n}\n\n\nconst LoginReduxForm = reduxForm({form:\"login\"})(LoginForm)\n\n\nconst Authorization = (props) => {\n    const onSubmit = (formData) => {\n        props.auth(formData.username, formData.password);\n    }\n    return (<div className={style.container}>\n                <LoginReduxForm onSubmit = {onSubmit}/>\n            </div>);\n}\n\n\n\nexport default Authorization;","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://emphasoft-test-assignment.herokuapp.com/'\n});\n\n\nexport const authAPI = {\n    login(username, password){\n        console.log(username);\n        console.log(password);\n        return instance.post('api-token-auth/', {username, password}).then(res => res.data).catch(error => error.request);\n    }\n}\n\nexport const usersAPI = {\n    get(token){\n        console.log(token);\n        return instance.get(\"api/v1/users/\", {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Authorization' : 'Bearer ' + token\n            }\n        }).then(res => res.data).catch(error => error.request);\n    }\n}","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_AUTH = \"auth/SET_AUTH\";\n\nlet initialState = {\n    auth:false,\n    token:\"\"\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH:\n            {\n                return {...state, token: action.token, auth: action.auth};\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuth = (token, auth) => ({type:SET_AUTH, token, auth});\n\nexport const auth = (username, password) => async dispatch => {\n    let response = null;\n    try\n    {\n        response = await authAPI.login(username, password);\n    }\n    catch\n    {\n        response = null;\n        console.log(\"ErrorLogin\");\n        dispatch(stopSubmit(\"login\", {_error: \"Something is wrong with the server!\"}));\n        return;\n    }\n    if(response.statusText === \"Bad Request\"){\n        dispatch(stopSubmit(\"login\", {_error: \"Wrong data!\"}));\n    } else {\n        console.log(response);\n        dispatch(setAuth(response.token, true));\n    }\n}\n\n\nexport default authReducer;","import {connect} from \"react-redux\";\nimport Authorization from \"./Authorization\";\nimport {auth} from \"../../redux/auth-reducer\";\n\n\n\n\n\n\n\n\n\nconst AuthorizationContainer = connect(null, {auth})(Authorization);\n\n\nexport default AuthorizationContainer;","import React from 'react';\nimport style from './Users.module.css';\n\n\n\n\n\nclass Users extends React.Component {\n    componentDidMount() {\n        console.log(this.props.token);\n        this.props.getUsers(this.props.token);\n    }\n\n    render() {\n        return (<div>\n                    <h1 className={style.users_header}>Users</h1>\n                </div>);\n    }\n}\n\n\nexport default Users;","import {usersAPI} from \"../api/api\";\n\nconst SET_USERS = \"auth/SET_USERS\";\n\nlet initialState = {\n    users:[]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USERS:\n        {\n            return {...state};\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const setUsers = (token, auth) => ({type:SET_USERS, token, auth});\n\nexport const getUsers = (token) => async dispatch => {\n    console.log(token);\n    let response = null;\n    try\n    {\n        response = await usersAPI.get(token);\n    }\n    catch\n    {\n        console.log(\"ErrorGetUsers\");\n        return;\n    }\n    console.log(response);\n    // if(response.statusText === \"Bad Request\"){\n    //     dispatch(stopSubmit(\"login\", {_error: \"Wrong data!\"}));\n    // } else {\n    //     //dispatch(setUsers());\n    // }\n}\n\n\nexport default usersReducer;","import {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {getUsers} from \"../../redux/users-reducer\";\n\n\n\n\nconst MapStateToProps = (state) => {\n    return{\n        token: state.authReducer.token\n    }\n}\n\n\n\n\nconst UsersContainer = connect(MapStateToProps, {getUsers})(Users);\n\n\nexport default UsersContainer;","import React from 'react';\nimport style from './App.module.css';\nimport AuthorizationContainer from \"./components/Authorization/AuthorizationContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\n\n\nclass App extends React.Component {\n  render(){\n    if(!this.props.auth){\n      return (\n          <div className={style.background}>\n            <AuthorizationContainer />\n          </div>\n      );\n    } else {\n      return (\n          <div className={style.background + \" \" + style.background2}>\n            <div className={style.btn_exit} onClick={() => this.props.setAuth(\"\", false)}>Exit</div>\n            <UsersContainer />\n          </div>\n      )\n    }\n  }\n}\n\nexport default App;\n","import {connect} from \"react-redux\";\nimport App from \"./App\";\nimport {setAuth} from \"./redux/auth-reducer\";\n\n\nconst MapStateToProps = (state) => {\n    return{\n        auth: state.authReducer.auth\n    }\n}\n\n\n\n\n\nconst AppContainer = connect(MapStateToProps,{setAuth})(App);\n\n\nexport default AppContainer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\n\r\nlet reducers = combineReducers({\r\n    authReducer,\r\n    usersReducer,\r\n    form:formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppContainer from './AppContainer';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store.js';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(<BrowserRouter>\n    <Provider store={store}>\n        <AppContainer />\n    </Provider >\n</BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__3CDGK\",\"background2\":\"App_background2__1gXIa\",\"btn_exit\":\"App_btn_exit__2uDPc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"Login_input_container__3onpC\",\"input\":\"Login_input__2WxVU\",\"input_error\":\"Login_input_error__2jKCF\",\"error_message\":\"Login_error_message__qxCLK\"};"],"sourceRoot":""}